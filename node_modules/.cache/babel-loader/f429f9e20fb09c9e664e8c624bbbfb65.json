{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\covid-19-tracker\\\\src\\\\components\\\\Chart\\\\Chart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport Line from 'react-chartjs-2';\nimport styles from './Chart.module.css';\nimport CountryPicker from '../CountryPicker/CountryPicker';\n\nfunction Chart() {\n  _s();\n\n  //const dailyurl= \"https://corona.lmao.ninja/v2/historical/India?lastdays=70\";\n  const [dailyData, setDailyData] = useState();\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  }, []); // country,province, timeline;\n\n  if (dailyData) {\n    var {\n      country,\n      province,\n      timeline\n    } = dailyData;\n    var {\n      cases,\n      deaths,\n      recovered\n    } = timeline;\n  }\n\n  console.log(dailyData);\n  console.log(timeline); //console.log(cases.date);\n\n  const lineChart = {\n    if(dailyData) {\n      /*#__PURE__*/\n      _jsxDEV(\"line\", {\n        data: {\n          labels: cases(({\n            date\n          }) => date),\n          datasets: [{\n            data: ({\n              cases\n            }) => cases,\n            label: 'Infected',\n            borderColor: '#3333ff',\n            fill: true\n          }, {\n            data: ({\n              recovered\n            }) => recovered,\n            label: 'recovered',\n            borderColor: '#3333ff',\n            fill: true\n          }, {\n            data: ({\n              deaths\n            }) => deaths,\n            label: 'deaths',\n            borderColor: '#red',\n            backgroundColor: rgba(255, 0, 0, 0.5),\n            fill: true\n          }]\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this);\n    }\n\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chart, \"Df7uINklA7E0y88LS1DaV7Pf47Q=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["D:/covid-19-tracker/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","styles","CountryPicker","Chart","dailyData","setDailyData","fetchAPI","country","province","timeline","cases","deaths","recovered","console","log","lineChart","if","labels","date","datasets","data","label","borderColor","fill","backgroundColor","rgba","container"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;AAEA,SAASC,KAAT,GAAkB;AAAA;;AACd;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,EAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMQ,QAAQ,GAAG,YAAY;AACzBD,MAAAA,YAAY,CAAC,MAAMN,cAAc,EAArB,CAAZ;AACH,KAFD;;AAGAO,IAAAA,QAAQ;AACX,GALQ,EAKP,EALO,CAAT,CAJc,CAUd;;AACA,MAAGF,SAAH,EACA;AACI,QAAI;AAACG,MAAAA,OAAD;AAAUC,MAAAA,QAAV;AAAoBC,MAAAA;AAApB,QAAgCL,SAApC;AACA,QAAI;AAACM,MAAAA,KAAD;AAAQC,MAAAA,MAAR;AAAgBC,MAAAA;AAAhB,QAA6BH,QAAjC;AACH;;AACGI,EAAAA,OAAO,CAACC,GAAR,CAAYV,SAAZ;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ,EAjBU,CAkBV;;AACJ,QAAMM,SAAS,GAAG;AACdC,IAAAA,EAAE,CAACZ,SAAD,EACF;AACA;AACI;AACA,QAAA,IAAI,EAAE;AACFa,UAAAA,MAAM,EAACP,KAAK,CAAC,CAAC;AAACQ,YAAAA;AAAD,WAAD,KAAYA,IAAb,CADV;AAEFC,UAAAA,QAAQ,EAAE,CAAC;AACPC,YAAAA,IAAI,EAAE,CAAC;AAACV,cAAAA;AAAD,aAAD,KAAaA,KADZ;AAEPW,YAAAA,KAAK,EAAE,UAFA;AAGPC,YAAAA,WAAW,EAAE,SAHN;AAIPC,YAAAA,IAAI,EAAE;AAJC,WAAD,EAKP;AACCH,YAAAA,IAAI,EAAE,CAAC;AAACR,cAAAA;AAAD,aAAD,KAAiBA,SADxB;AAECS,YAAAA,KAAK,EAAE,WAFR;AAGCC,YAAAA,WAAW,EAAE,SAHd;AAICC,YAAAA,IAAI,EAAE;AAJP,WALO,EAUP;AACCH,YAAAA,IAAI,EAAC,CAAC;AAACT,cAAAA;AAAD,aAAD,KAAcA,MADpB;AAECU,YAAAA,KAAK,EAAE,QAFR;AAGCC,YAAAA,WAAW,EAAE,MAHd;AAICE,YAAAA,eAAe,EAAEC,IAAI,CAAC,GAAD,EAAM,CAAN,EAAS,CAAT,EAAY,GAAZ,CAJtB;AAKCF,YAAAA,IAAI,EAAE;AALP,WAVO;AAFR;AADN;AAAA;AAAA;AAAA;AAAA,cADJ;AAyBH;;AA5BiB,GAAlB;AA8BA,sBACI;AAAK,IAAA,SAAS,EAAEtB,MAAM,CAACyB;AAAvB;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAtDQvB,K;;KAAAA,K;AAwDT,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport Line from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\nimport CountryPicker from '../CountryPicker/CountryPicker';\r\n\r\nfunction Chart () {\r\n    //const dailyurl= \"https://corona.lmao.ninja/v2/historical/India?lastdays=70\";\r\n    const [dailyData, setDailyData] = useState();\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        fetchAPI();\r\n    },[]);\r\n    // country,province, timeline;\r\n    if(dailyData)\r\n    {\r\n        var {country, province, timeline} = dailyData;\r\n        var {cases, deaths, recovered} = timeline;\r\n    }\r\n        console.log(dailyData);\r\n        console.log(timeline);\r\n        //console.log(cases.date);\r\n    const lineChart = {\r\n        if(dailyData) \r\n        {\r\n        (\r\n            <line\r\n            data={{\r\n                labels:cases(({date}) => date),\r\n                datasets: [{\r\n                    data: ({cases}) => cases,\r\n                    label: 'Infected',\r\n                    borderColor: '#3333ff',\r\n                    fill: true,\r\n                }, {\r\n                    data: ({recovered}) => recovered,\r\n                    label: 'recovered',\r\n                    borderColor: '#3333ff',\r\n                    fill: true,\r\n                }, {\r\n                    data:({deaths}) => deaths,\r\n                    label: 'deaths',\r\n                    borderColor: '#red',\r\n                    backgroundColor: rgba(255, 0, 0, 0.5),\r\n                    fill: true,\r\n                }],\r\n            }}\r\n            />\r\n\r\n        )\r\n    }\r\n}\r\n    return (\r\n        <div className={styles.container}>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;\r\n"]},"metadata":{},"sourceType":"module"}