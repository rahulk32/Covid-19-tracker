{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\covid-19-tracker\\\\src\\\\components\\\\Chart\\\\Chart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\nimport CountryPicker from '../CountryPicker/CountryPicker';\n\nfunction Chart({\n  dailyData\n}) {\n  _s();\n\n  var Data, data, cases, recovered, deaths;\n  console.log(dailyData);\n\n  if (Object.keys(dailyData).length === 0 && dailyData.constructor === Object) {\n    useEffect(() => {\n      const fetchAPI = async () => {\n        setDailyData(await fetchDailyData());\n      };\n\n      fetchAPI();\n    }, []);\n    return \"Loading\";\n  } else {\n    Data = dailyData;\n  }\n\n  cases = Data.cases;\n  deaths = Data.deaths;\n  recovered = Data.recovered;\n  /*const [dailyData, setDailyData] = useState();\r\n    useEffect(() => {\r\n      const fetchAPI = async () => {\r\n          setDailyData(await fetchDailyData());\r\n      }\r\n      fetchAPI();\r\n  },[]);\r\n  \r\n    // country,province, timeline;\r\n  var data, cases, deaths, recovered;\r\n  \r\n  if(dailyData)\r\n  {\r\n      //console.log(dailyData);\r\n      \r\n          cases= dailyData.cases;\r\n          deaths =dailyData.deaths;\r\n          recovered =dailyData.recovered;\r\n          \r\n      //}\r\n      console.log(props);\r\n      \r\n      \r\n      if(props)\r\n      {\r\n          console.log(dailyData);\r\n      }*/\n  //var {cases, deaths, recovered} = temp;\n\n  var a = Object.keys(cases),\n      b = Object.values(cases),\n      c = Object.values(recovered);\n  var d = Object.values(deaths); //console.log(typeof(a));\n\n  data = {\n    labels: a,\n    datasets: [{\n      label: \"Infected\",\n      data: b,\n      fill: true,\n      borderColor: \"#blue\"\n    }, {\n      label: \"Recovered\",\n      data: c,\n      fill: false,\n      borderColor: \"#green\",\n      backgroundColor: \"rgba(0, 255, 0, 0.5)\"\n    }, {\n      label: \"Death\",\n      data: d,\n      fill: true,\n      borderColor: \"#red\",\n      backgroundColor: \"rgba(255, 0, 0, 0.5)\"\n    }]\n  }; //console.log(data);\n  //console.log(dailyData);\n  //console.log(timeline);\n  //console.log(cases.date);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chart, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["D:/covid-19-tracker/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","styles","CountryPicker","Chart","dailyData","Data","data","cases","recovered","deaths","console","log","Object","keys","length","constructor","fetchAPI","setDailyData","a","b","values","c","d","labels","datasets","label","fill","borderColor","backgroundColor","container"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;AAEA,SAASC,KAAT,CAAgB;AAACC,EAAAA;AAAD,CAAhB,EAA6B;AAAA;;AACzB,MAAIC,IAAJ,EAAUC,IAAV,EAAeC,KAAf,EAAsBC,SAAtB,EAAiCC,MAAjC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,SAAZ;;AACA,MAAIQ,MAAM,CAACC,IAAP,CAAYT,SAAZ,EAAuBU,MAAvB,KAAkC,CAAlC,IAAuCV,SAAS,CAACW,WAAV,KAA0BH,MAArE,EACA;AACId,IAAAA,SAAS,CAAC,MAAM;AACZ,YAAMkB,QAAQ,GAAG,YAAY;AACzBC,QAAAA,YAAY,CAAC,MAAMlB,cAAc,EAArB,CAAZ;AACH,OAFD;;AAGAiB,MAAAA,QAAQ;AACX,KALQ,EAKP,EALO,CAAT;AAMA,WAAO,SAAP;AACH,GATD,MAUI;AACAX,IAAAA,IAAI,GAAED,SAAN;AACH;;AACGG,EAAAA,KAAK,GAAEF,IAAI,CAACE,KAAZ;AACAE,EAAAA,MAAM,GAAEJ,IAAI,CAACI,MAAb;AACAD,EAAAA,SAAS,GAAEH,IAAI,CAACG,SAAhB;AAEJ;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGQ;;AACA,MAAIU,CAAC,GAACN,MAAM,CAACC,IAAP,CAAYN,KAAZ,CAAN;AAAA,MAA0BY,CAAC,GAACP,MAAM,CAACQ,MAAP,CAAcb,KAAd,CAA5B;AAAA,MAAkDc,CAAC,GAACT,MAAM,CAACQ,MAAP,CAAcZ,SAAd,CAApD;AACA,MAAIc,CAAC,GAACV,MAAM,CAACQ,MAAP,CAAcX,MAAd,CAAN,CAnDqB,CAoDrB;;AACAH,EAAAA,IAAI,GAAG;AACHiB,IAAAA,MAAM,EAAEL,CADL;AAEHM,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAE,UADT;AAEEnB,MAAAA,IAAI,EAAEa,CAFR;AAGEO,MAAAA,IAAI,EAAE,IAHR;AAIEC,MAAAA,WAAW,EAAE;AAJf,KADQ,EAOR;AACEF,MAAAA,KAAK,EAAE,WADT;AAEEnB,MAAAA,IAAI,EAAEe,CAFR;AAGEK,MAAAA,IAAI,EAAE,KAHR;AAIEC,MAAAA,WAAW,EAAE,QAJf;AAKEC,MAAAA,eAAe,EAAE;AALnB,KAPQ,EAcR;AACEH,MAAAA,KAAK,EAAE,OADT;AAEEnB,MAAAA,IAAI,EAAEgB,CAFR;AAGEI,MAAAA,IAAI,EAAE,IAHR;AAIEC,MAAAA,WAAW,EAAC,MAJd;AAKEC,MAAAA,eAAe,EAAE;AALnB,KAdQ;AAFP,GAAP,CArDqB,CAgFzB;AACI;AACA;AAEA;;AAKJ,sBACI;AAAK,IAAA,SAAS,EAAE3B,MAAM,CAAC4B,SAAvB;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEvB;AAAZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA9FQH,K;;KAAAA,K;AAgGT,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line } from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\nimport CountryPicker from '../CountryPicker/CountryPicker';\r\n\r\nfunction Chart ({dailyData}) {\r\n    var Data, data,cases, recovered, deaths;\r\n    console.log(dailyData);\r\n    if (Object.keys(dailyData).length === 0 && dailyData.constructor === Object)\r\n    {\r\n        useEffect(() => {\r\n            const fetchAPI = async () => {\r\n                setDailyData(await fetchDailyData());\r\n            }\r\n            fetchAPI();\r\n        },[]);\r\n        return \"Loading\";\r\n    }\r\n    else{\r\n        Data= dailyData;\r\n    }\r\n        cases= Data.cases;\r\n        deaths =Data.deaths;\r\n        recovered =Data.recovered;\r\n    \r\n    /*const [dailyData, setDailyData] = useState();\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        fetchAPI();\r\n    },[]);\r\n    \r\n\r\n    // country,province, timeline;\r\n    var data, cases, deaths, recovered;\r\n    \r\n    if(dailyData)\r\n    {\r\n        //console.log(dailyData);\r\n        \r\n            cases= dailyData.cases;\r\n            deaths =dailyData.deaths;\r\n            recovered =dailyData.recovered;\r\n            \r\n        //}\r\n        console.log(props);\r\n        \r\n        \r\n        if(props)\r\n        {\r\n            console.log(dailyData);\r\n        }*/\r\n        //var {cases, deaths, recovered} = temp;\r\n        var a=Object.keys(cases), b=Object.values(cases), c=Object.values(recovered);\r\n        var d=Object.values(deaths)\r\n        //console.log(typeof(a));\r\n        data = {\r\n            labels: a,\r\n            datasets: [\r\n              {\r\n                label: \"Infected\",\r\n                data: b,\r\n                fill: true,\r\n                borderColor: \"#blue\"\r\n              },\r\n              {\r\n                label: \"Recovered\",\r\n                data: c,\r\n                fill: false,\r\n                borderColor: \"#green\",\r\n                backgroundColor: \"rgba(0, 255, 0, 0.5)\"\r\n              },\r\n              {\r\n                label: \"Death\",\r\n                data: d,\r\n                fill: true,\r\n                borderColor:\"#red\",\r\n                backgroundColor: \"rgba(255, 0, 0, 0.5)\"\r\n              }\r\n            ]\r\n          };\r\n    \r\n\r\n    //console.log(data);\r\n        //console.log(dailyData);\r\n        //console.log(timeline);\r\n\r\n        //console.log(cases.date);\r\n    \r\n\r\n        \r\n    \r\n    return (\r\n        <div className={styles.container}>\r\n            <Line data={data}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chart;\r\n"]},"metadata":{},"sourceType":"module"}