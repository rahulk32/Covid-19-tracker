{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\covid-19-tracker\\\\src\\\\components\\\\Chart\\\\Chart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\nimport CountryPicker from '../CountryPicker/CountryPicker';\n\nfunction Chart(props) {\n  _s();\n\n  const [dailyData, setDailyData] = useState();\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  }, []); // country,province, timeline;\n\n  var data, temp, cases, deaths, recovered; //console.log(props);\n\n  if (dailyData) {\n    console.log(dailydata);\n\n    if (props) {\n      cases = dailyData.timeline.cases;\n      deaths = dailyData.timeline.deaths;\n      recovered = dailyData.timeline.recovered;\n    } else {\n      cases = dailyData.cases;\n      deaths = dailyData.deaths;\n      recovered = dailyData.recovered;\n    }\n\n    var {\n      cases,\n      deaths,\n      recovered\n    } = temp;\n    var a = Object.keys(cases),\n        b = Object.values(cases),\n        c = Object.values(recovered);\n    var d = Object.values(deaths); //console.log(typeof(a));\n\n    data = {\n      labels: a,\n      datasets: [{\n        label: \"Infected\",\n        data: b,\n        fill: true,\n        borderColor: \"#blue\"\n      }, {\n        label: \"Recovered\",\n        data: c,\n        fill: false,\n        borderColor: \"#green\",\n        backgroundColor: \"rgba(0, 255, 0, 0.5)\"\n      }, {\n        label: \"Death\",\n        data: d,\n        fill: true,\n        borderColor: \"#red\",\n        backgroundColor: \"rgba(255, 0, 0, 0.5)\"\n      }]\n    };\n  }\n\n  console.log(data); //console.log(dailyData);\n\n  console.log(timeline); //console.log(cases.date);\n\n  if (data) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);else return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Chart, \"Df7uINklA7E0y88LS1DaV7Pf47Q=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["D:/covid-19-tracker/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","styles","CountryPicker","Chart","props","dailyData","setDailyData","fetchAPI","data","temp","cases","deaths","recovered","console","log","dailydata","timeline","a","Object","keys","b","values","c","d","labels","datasets","label","fill","borderColor","backgroundColor","container"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line } from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\nimport CountryPicker from '../CountryPicker/CountryPicker';\r\n\r\nfunction Chart (props) {\r\n    const [dailyData, setDailyData] = useState();\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        fetchAPI();\r\n    },[]);\r\n    // country,province, timeline;\r\n    var data, temp, cases, deaths, recovered;\r\n    //console.log(props);\r\n    if(dailyData)\r\n    {\r\n        console.log(dailydata);\r\n        if(props)\r\n        {\r\n            cases= dailyData.timeline.cases;\r\n            deaths =dailyData.timeline.deaths;\r\n            recovered =dailyData.timeline.recovered;\r\n        }\r\n        else\r\n        {\r\n            cases= dailyData.cases;\r\n            deaths =dailyData.deaths;\r\n            recovered =dailyData.recovered;\r\n        }\r\n        var {cases, deaths, recovered} = temp;\r\n        var a=Object.keys(cases), b=Object.values(cases), c=Object.values(recovered);\r\n        var d=Object.values(deaths)\r\n        //console.log(typeof(a));\r\n        data = {\r\n            labels: a,\r\n            datasets: [\r\n              {\r\n                label: \"Infected\",\r\n                data: b,\r\n                fill: true,\r\n                borderColor: \"#blue\"\r\n              },\r\n              {\r\n                label: \"Recovered\",\r\n                data: c,\r\n                fill: false,\r\n                borderColor: \"#green\",\r\n                backgroundColor: \"rgba(0, 255, 0, 0.5)\"\r\n              },\r\n              {\r\n                label: \"Death\",\r\n                data: d,\r\n                fill: true,\r\n                borderColor:\"#red\",\r\n                backgroundColor: \"rgba(255, 0, 0, 0.5)\"\r\n              }\r\n            ]\r\n          };\r\n    }\r\n\r\n    console.log(data);\r\n        //console.log(dailyData);\r\n        console.log(timeline);\r\n\r\n        //console.log(cases.date);\r\n    \r\n\r\n        \r\n    if(data)\r\n    return (\r\n        <div className={styles.container}>\r\n            <Line data={data}/>\r\n        </div>\r\n    )\r\n    else\r\n        return (\r\n            <div className={styles.container}>\r\n                \r\n            </div>\r\n        )\r\n\r\n}\r\n\r\nexport default Chart;\r\n"]},"metadata":{},"sourceType":"module"}