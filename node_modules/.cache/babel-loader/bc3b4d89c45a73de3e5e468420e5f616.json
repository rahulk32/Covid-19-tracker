{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\covid-19-tracker\\\\src\\\\components\\\\Chart\\\\Chart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport Line from 'react-chartjs-2';\nimport styles from './Chart.module.css';\nimport CountryPicker from '../CountryPicker/CountryPicker';\n\nfunction Chart() {\n  _s();\n\n  //const dailyurl= \"https://corona.lmao.ninja/v2/historical/India?lastdays=70\";\n  const [dailyData, setDailyData] = useState();\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  }, []); // country,province, timeline;\n\n  if (dailyData) {\n    var {\n      country,\n      province,\n      timeline\n    } = dailyData;\n    var {\n      cases,\n      deaths,\n      recovered\n    } = timeline; //console.log(dailyData);\n\n    console.log(timeline); //console.log(cases.date);\n\n    const a = Object.keys(cases),\n          b = Object.values(cases);\n    const c = Object.values(recovered);\n    const d = Object.values(deaths);\n    const lineChart = {\n      if(dailyData) {\n        /*#__PURE__*/\n        _jsxDEV(\"line\", {\n          data: {\n            labels: a,\n            datasets: [{\n              data: b,\n              label: 'Infected',\n              borderColor: '#3333ff',\n              fill: true\n            }, {\n              data: c,\n              label: 'recovered',\n              borderColor: '#3333ff',\n              fill: true\n            }, {\n              data: d,\n              label: 'deaths',\n              borderColor: '#red',\n              backgroundColor: '#blue',\n              fill: true\n            }]\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this);\n      }\n\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: lineChart\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chart, \"Df7uINklA7E0y88LS1DaV7Pf47Q=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["D:/covid-19-tracker/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","styles","CountryPicker","Chart","dailyData","setDailyData","fetchAPI","country","province","timeline","cases","deaths","recovered","console","log","a","Object","keys","b","values","c","d","lineChart","if","labels","datasets","data","label","borderColor","fill","backgroundColor","container"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;AAEA,SAASC,KAAT,GAAkB;AAAA;;AACd;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,EAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMQ,QAAQ,GAAG,YAAY;AACzBD,MAAAA,YAAY,CAAC,MAAMN,cAAc,EAArB,CAAZ;AACH,KAFD;;AAGAO,IAAAA,QAAQ;AACX,GALQ,EAKP,EALO,CAAT,CAJc,CAUd;;AACA,MAAGF,SAAH,EACA;AACI,QAAI;AAACG,MAAAA,OAAD;AAAUC,MAAAA,QAAV;AAAoBC,MAAAA;AAApB,QAAgCL,SAApC;AACA,QAAI;AAACM,MAAAA,KAAD;AAAQC,MAAAA,MAAR;AAAgBC,MAAAA;AAAhB,QAA6BH,QAAjC,CAFJ,CAGI;;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ,EAJJ,CAMI;;AACJ,UAAMM,CAAC,GAACC,MAAM,CAACC,IAAP,CAAYP,KAAZ,CAAR;AAAA,UAA4BQ,CAAC,GAACF,MAAM,CAACG,MAAP,CAAcT,KAAd,CAA9B;AACA,UAAMU,CAAC,GAACJ,MAAM,CAACG,MAAP,CAAcP,SAAd,CAAR;AACA,UAAMS,CAAC,GAACL,MAAM,CAACG,MAAP,CAAcR,MAAd,CAAR;AACA,UAAMW,SAAS,GAAG;AACdC,MAAAA,EAAE,CAACnB,SAAD,EACF;AACA;AACI;AACA,UAAA,IAAI,EAAE;AACFoB,YAAAA,MAAM,EAAET,CADN;AAEFU,YAAAA,QAAQ,EAAE,CAAC;AACPC,cAAAA,IAAI,EAAER,CADC;AAEPS,cAAAA,KAAK,EAAE,UAFA;AAGPC,cAAAA,WAAW,EAAE,SAHN;AAIPC,cAAAA,IAAI,EAAE;AAJC,aAAD,EAKP;AACCH,cAAAA,IAAI,EAAEN,CADP;AAECO,cAAAA,KAAK,EAAE,WAFR;AAGCC,cAAAA,WAAW,EAAE,SAHd;AAICC,cAAAA,IAAI,EAAE;AAJP,aALO,EAUP;AACCH,cAAAA,IAAI,EAAEL,CADP;AAECM,cAAAA,KAAK,EAAE,QAFR;AAGCC,cAAAA,WAAW,EAAE,MAHd;AAICE,cAAAA,eAAe,EAAE,OAJlB;AAKCD,cAAAA,IAAI,EAAE;AALP,aAVO;AAFR;AADN;AAAA;AAAA;AAAA;AAAA,gBADJ;AAyBH;;AA5BiB,KAAlB;AA8BH;;AACG,sBACI;AAAK,IAAA,SAAS,EAAE5B,MAAM,CAAC8B,SAAvB;AAAA,cACKT;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA1DQnB,K;;KAAAA,K;AA4DT,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport Line from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\nimport CountryPicker from '../CountryPicker/CountryPicker';\r\n\r\nfunction Chart () {\r\n    //const dailyurl= \"https://corona.lmao.ninja/v2/historical/India?lastdays=70\";\r\n    const [dailyData, setDailyData] = useState();\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        fetchAPI();\r\n    },[]);\r\n    // country,province, timeline;\r\n    if(dailyData)\r\n    {\r\n        var {country, province, timeline} = dailyData;\r\n        var {cases, deaths, recovered} = timeline;\r\n        //console.log(dailyData);\r\n        console.log(timeline);\r\n\r\n        //console.log(cases.date);\r\n    const a=Object.keys(cases), b=Object.values(cases);\r\n    const c=Object.values(recovered);\r\n    const d=Object.values(deaths);\r\n    const lineChart = {\r\n        if(dailyData) \r\n        {\r\n        (\r\n            <line\r\n            data={{\r\n                labels: a,\r\n                datasets: [{\r\n                    data: b,\r\n                    label: 'Infected',\r\n                    borderColor: '#3333ff',\r\n                    fill: true,\r\n                }, {\r\n                    data: c,\r\n                    label: 'recovered',\r\n                    borderColor: '#3333ff',\r\n                    fill: true,\r\n                }, {\r\n                    data: d,\r\n                    label: 'deaths',\r\n                    borderColor: '#red',\r\n                    backgroundColor: '#blue',\r\n                    fill: true,\r\n                }],\r\n            }}\r\n            />\r\n\r\n        )\r\n    }\r\n}\r\n}\r\n    return (\r\n        <div className={styles.container}>\r\n            {lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;\r\n"]},"metadata":{},"sourceType":"module"}