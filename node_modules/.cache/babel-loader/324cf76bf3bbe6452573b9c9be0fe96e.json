{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\covid-19-tracker\\\\src\\\\components\\\\Chart\\\\Chart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport Line from 'react-chartjs-2';\nimport styles from './Chart.module.css';\nimport CountryPicker from '../CountryPicker/CountryPicker';\n\nfunction Chart() {\n  _s();\n\n  //const dailyurl= \"https://corona.lmao.ninja/v2/historical/India?lastdays=70\";\n  const [dailyData, setDailyData] = useState();\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  }, []); // country,province, timeline;\n\n  if (dailyData) {\n    var {\n      country,\n      province,\n      timeline\n    } = dailyData;\n    var {\n      cases,\n      deaths,\n      recovered\n    } = timeline;\n    var a = Object.keys(cases); //console.log(a);\n  } //console.log(dailyData);\n\n\n  console.log(timeline); //console.log(cases.date);\n\n  const lineChart = {\n    if(dailyData) {\n      const a = Object.keys(cases),\n            b = Object.values(cases),\n            c = Object.values(recovered);\n      const d = Object.values(deaths);\n      console.log(a);\n\n      /*#__PURE__*/\n      _jsxDEV(\"line\", {\n        data: {\n          labels: a,\n          datasets: [{\n            data: b,\n            label: 'Infected',\n            borderColor: '#3333ff',\n            fill: true\n          }, {\n            data: c,\n            label: 'recovered',\n            borderColor: '#3333ff',\n            fill: true\n          }, {\n            data: d,\n            label: 'deaths',\n            borderColor: '#red',\n            backgroundColor: '#blue',\n            fill: true\n          }]\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this);\n    }\n\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chart, \"Df7uINklA7E0y88LS1DaV7Pf47Q=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["D:/covid-19-tracker/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","styles","CountryPicker","Chart","dailyData","setDailyData","fetchAPI","country","province","timeline","cases","deaths","recovered","a","Object","keys","console","log","lineChart","if","b","values","c","d","labels","datasets","data","label","borderColor","fill","backgroundColor","container"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;AAEA,SAASC,KAAT,GAAkB;AAAA;;AACd;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,EAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMQ,QAAQ,GAAG,YAAY;AACzBD,MAAAA,YAAY,CAAC,MAAMN,cAAc,EAArB,CAAZ;AACH,KAFD;;AAGAO,IAAAA,QAAQ;AACX,GALQ,EAKP,EALO,CAAT,CAJc,CAUd;;AACA,MAAGF,SAAH,EACA;AACI,QAAI;AAACG,MAAAA,OAAD;AAAUC,MAAAA,QAAV;AAAoBC,MAAAA;AAApB,QAAgCL,SAApC;AACA,QAAI;AAACM,MAAAA,KAAD;AAAQC,MAAAA,MAAR;AAAgBC,MAAAA;AAAhB,QAA6BH,QAAjC;AACA,QAAII,CAAC,GAACC,MAAM,CAACC,IAAP,CAAYL,KAAZ,CAAN,CAHJ,CAII;AACH,GAjBa,CAkBV;;;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ,EAnBU,CAqBV;;AAEJ,QAAMS,SAAS,GAAG;AACdC,IAAAA,EAAE,CAACf,SAAD,EACF;AACI,YAAMS,CAAC,GAACC,MAAM,CAACC,IAAP,CAAYL,KAAZ,CAAR;AAAA,YAA4BU,CAAC,GAACN,MAAM,CAACO,MAAP,CAAcX,KAAd,CAA9B;AAAA,YAAoDY,CAAC,GAACR,MAAM,CAACO,MAAP,CAAcT,SAAd,CAAtD;AACA,YAAMW,CAAC,GAACT,MAAM,CAACO,MAAP,CAAcV,MAAd,CAAR;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAZ;;AACJ;AACI;AACA,QAAA,IAAI,EAAE;AACFW,UAAAA,MAAM,EAAEX,CADN;AAEFY,UAAAA,QAAQ,EAAE,CAAC;AACPC,YAAAA,IAAI,EAAEN,CADC;AAEPO,YAAAA,KAAK,EAAE,UAFA;AAGPC,YAAAA,WAAW,EAAE,SAHN;AAIPC,YAAAA,IAAI,EAAE;AAJC,WAAD,EAKP;AACCH,YAAAA,IAAI,EAAEJ,CADP;AAECK,YAAAA,KAAK,EAAE,WAFR;AAGCC,YAAAA,WAAW,EAAE,SAHd;AAICC,YAAAA,IAAI,EAAE;AAJP,WALO,EAUP;AACCH,YAAAA,IAAI,EAAEH,CADP;AAECI,YAAAA,KAAK,EAAE,QAFR;AAGCC,YAAAA,WAAW,EAAE,MAHd;AAICE,YAAAA,eAAe,EAAE,OAJlB;AAKCD,YAAAA,IAAI,EAAE;AALP,WAVO;AAFR;AADN;AAAA;AAAA;AAAA;AAAA,cADJ;AAyBH;;AA/BiB,GAAlB;AAiCA,sBACI;AAAK,IAAA,SAAS,EAAE5B,MAAM,CAAC8B;AAAvB;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GA7DQ5B,K;;KAAAA,K;AA+DT,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport Line from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\nimport CountryPicker from '../CountryPicker/CountryPicker';\r\n\r\nfunction Chart () {\r\n    //const dailyurl= \"https://corona.lmao.ninja/v2/historical/India?lastdays=70\";\r\n    const [dailyData, setDailyData] = useState();\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        fetchAPI();\r\n    },[]);\r\n    // country,province, timeline;\r\n    if(dailyData)\r\n    {\r\n        var {country, province, timeline} = dailyData;\r\n        var {cases, deaths, recovered} = timeline;\r\n        var a=Object.keys(cases);\r\n        //console.log(a);\r\n    }\r\n        //console.log(dailyData);\r\n        console.log(timeline);\r\n\r\n        //console.log(cases.date);\r\n    \r\n    const lineChart = {\r\n        if(dailyData) \r\n        {\r\n            const a=Object.keys(cases), b=Object.values(cases), c=Object.values(recovered);\r\n            const d=Object.values(deaths);\r\n            console.log(a);\r\n        (\r\n            <line\r\n            data={{\r\n                labels: a,\r\n                datasets: [{\r\n                    data: b,\r\n                    label: 'Infected',\r\n                    borderColor: '#3333ff',\r\n                    fill: true,\r\n                }, {\r\n                    data: c,\r\n                    label: 'recovered',\r\n                    borderColor: '#3333ff',\r\n                    fill: true,\r\n                }, {\r\n                    data: d,\r\n                    label: 'deaths',\r\n                    borderColor: '#red',\r\n                    backgroundColor: '#blue',\r\n                    fill: true,\r\n                }],\r\n            }}\r\n            />\r\n\r\n        )\r\n    }\r\n}\r\n    return (\r\n        <div className={styles.container}>\r\n    \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;\r\n"]},"metadata":{},"sourceType":"module"}