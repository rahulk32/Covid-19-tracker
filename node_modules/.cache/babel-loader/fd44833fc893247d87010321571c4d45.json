{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\covid-19-tracker\\\\src\\\\components\\\\CountryPicker\\\\CountryPicker.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl, StylesProvider } from '@material-ui/core';\nimport styles from './CountryPicker.module.css';\nimport { fetchCountries } from '../../api';\nimport { refreshPage } from './App.js';\n\nfunction CountryPicker({\n  handleCountryChange\n}) {\n  _s();\n\n  const [fetchedCountries, setFetchedCountries] = useState([]);\n  useEffect(() => {\n    const fetchApi = async () => {\n      setFetchedCountries(await fetchCountries());\n    };\n\n    fetchApi();\n  }, [setFetchedCountries]); //console.log(fetchedCountries);\n\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    className: styles.formcontrol,\n    children: /*#__PURE__*/_jsxDEV(NativeSelect, {\n      defaultValue: \"\",\n      onChange: e => handleCountryChange(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        onClick: refreshPage,\n        value: \"\",\n        children: \"Global\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), fetchedCountries.map((country, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: country,\n        children: country\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 55\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CountryPicker, \"Do9onPiNE5+jzUqGJ2UrSR1Aye8=\");\n\n_c = CountryPicker;\nexport default CountryPicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryPicker\");","map":{"version":3,"sources":["D:/covid-19-tracker/src/components/CountryPicker/CountryPicker.jsx"],"names":["React","useState","useEffect","NativeSelect","FormControl","StylesProvider","styles","fetchCountries","refreshPage","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","fetchApi","formcontrol","e","target","value","map","country","i"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAASC,YAAT,EAAuBC,WAAvB,EAAoCC,cAApC,QAA0D,mBAA1D;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAAQC,WAAR,QAA0B,UAA1B;;AACA,SAASC,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAAgD;AAAA;;AAC5C,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CX,QAAQ,CAAC,EAAD,CAAxD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMW,QAAQ,GAAG,YAAY;AACzBD,MAAAA,mBAAmB,CAAC,MAAML,cAAc,EAArB,CAAnB;AACH,KAFD;;AAIAM,IAAAA,QAAQ;AACX,GANQ,EAMP,CAACD,mBAAD,CANO,CAAT,CAH4C,CAW5C;;AAIA,sBACI,QAAC,WAAD;AAAa,IAAA,SAAS,EAAEN,MAAM,CAACQ,WAA/B;AAAA,2BACI,QAAC,YAAD;AAAc,MAAA,YAAY,EAAC,EAA3B;AAA8B,MAAA,QAAQ,EAAGC,CAAD,IAAOL,mBAAmB,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlE;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAET,WAAjB;AAA8B,QAAA,KAAK,EAAC,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKG,gBAAgB,CAACO,GAAjB,CAAqB,CAACC,OAAD,EAAUC,CAAV,kBAAgB;AAAgB,QAAA,KAAK,EAAED,OAAvB;AAAA,kBAAiCA;AAAjC,SAAaC,CAAb;AAAA;AAAA;AAAA;AAAA,cAArC,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAvBQX,a;;KAAAA,a;AAyBT,eAAeA,aAAf","sourcesContent":["import React,{ useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl, StylesProvider } from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport { fetchCountries } from '../../api';\r\nimport {refreshPage} from './App.js';\r\nfunction CountryPicker({ handleCountryChange }) {\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchApi = async () => {\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n\r\n        fetchApi();\r\n    },[setFetchedCountries]);\r\n\r\n    //console.log(fetchedCountries);\r\n    \r\n\r\n      \r\n    return (\r\n        <FormControl className={styles.formcontrol}>\r\n            <NativeSelect defaultValue='' onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option onClick={refreshPage} value=''>Global</option>\r\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;\r\n"]},"metadata":{},"sourceType":"module"}