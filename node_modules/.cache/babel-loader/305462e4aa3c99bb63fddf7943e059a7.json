{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _regeneratorRuntime from\"D:/covid-19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/covid-19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"D:/covid-19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"D:/covid-19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"D:/covid-19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"D:/covid-19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import styles from'./App.module.css';import{Cards,Chart,CountryPicker}from'./components';import{fetchdata}from'./api';import{fetchDailyData}from'./api';import coronaImage from'./img/logo.png';var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={data:{},dailyData:{},country:''};_this.handleCountryChange=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(country){var fetchedData,fetchedDailyData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(country===\"global\")window.location.reload(false);_context.next=3;return fetchdata(country);case 3:fetchedData=_context.sent;_context.next=6;return fetchDailyData(country);case 6:fetchedDailyData=_context.sent;if(country)fetchedDailyData=fetchedDailyData.timeline;else fetchedDailyData={};_this.setState({data:fetchedData,country:country,dailyData:fetchedDailyData});case 9:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();return _this;}_createClass(App,[{key:\"componentDidMount\",value:function(){var _componentDidMount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var fetchedData,fetchedGlobalDailyData;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetchdata(\"\");case 2:fetchedData=_context2.sent;_context2.next=5;return fetchDailyData(\"\");case 5:fetchedGlobalDailyData=_context2.sent;if(fetchedGlobalDailyData)this.setState({dailyData:fetchedGlobalDailyData});this.setState({data:fetchedData});case 8:case\"end\":return _context2.stop();}}},_callee2,this);}));function componentDidMount(){return _componentDidMount.apply(this,arguments);}return componentDidMount;}()},{key:\"render\",value:function render(){var _this$state=this.state,data=_this$state.data,country=_this$state.country,dailyData=_this$state.dailyData;return/*#__PURE__*/_jsxs(\"div\",{className:styles.container,children:[/*#__PURE__*/_jsx(\"img\",{className:styles.image,src:coronaImage,alt:\"covid-19 logo\"}),/*#__PURE__*/_jsx(Cards,{data:data}),/*#__PURE__*/_jsx(CountryPicker,{handleCountryChange:this.handleCountryChange}),/*#__PURE__*/_jsx(Chart,{dailyData:dailyData})]});}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["D:/covid-19-tracker/src/App.js"],"names":["React","styles","Cards","Chart","CountryPicker","fetchdata","fetchDailyData","coronaImage","App","state","data","dailyData","country","handleCountryChange","window","location","reload","fetchedData","fetchedDailyData","timeline","setState","fetchedGlobalDailyData","container","image","Component"],"mappings":"i4BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,kBAAnB,CACA,OAASC,KAAT,CAAgBC,KAAhB,CAAsBC,aAAtB,KAA2C,cAA3C,CACA,OAASC,SAAT,KAA0B,OAA1B,CACA,OAASC,cAAT,KAA+B,OAA/B,CACA,MAAOC,CAAAA,WAAP,KAAwB,gBAAxB,C,GAEMC,CAAAA,G,2TACJC,K,CAAQ,CACNC,IAAI,CAAE,EADA,CAENC,SAAS,CAAE,EAFL,CAGNC,OAAO,CAAE,EAHH,C,OAcRC,mB,0FAAsB,iBAAOD,OAAP,mJACpB,GAAGA,OAAO,GAAG,QAAb,CACEE,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB,EAFkB,sBAIKX,CAAAA,SAAS,CAACO,OAAD,CAJd,QAIdK,WAJc,qCAKQX,CAAAA,cAAc,CAACM,OAAD,CALtB,QAKhBM,gBALgB,eAMpB,GAAGN,OAAH,CACEM,gBAAgB,CAACA,gBAAgB,CAACC,QAAlC,CADF,IAGAD,CAAAA,gBAAgB,CAAC,EAAjB,CAEA,MAAKE,QAAL,CAAc,CAAEV,IAAI,CAAEO,WAAR,CAAqBL,OAAO,CAAEA,OAA9B,CAAuCD,SAAS,CAAEO,gBAAlD,CAAd,EAXoB,sD,8ZAPKb,CAAAA,SAAS,CAAC,EAAD,C,QAA5BY,W,uCAC8BX,CAAAA,cAAc,CAAC,EAAD,C,QAA5Ce,sB,gBACN,GAAGA,sBAAH,CACE,KAAKD,QAAL,CAAc,CAAET,SAAS,CAAEU,sBAAb,CAAd,EACF,KAAKD,QAAL,CAAc,CAAEV,IAAI,CAAEO,WAAR,CAAd,E,iNAiBK,iBAC8B,KAAKR,KADnC,CACCC,IADD,aACCA,IADD,CACOE,OADP,aACOA,OADP,CACgBD,SADhB,aACgBA,SADhB,CAEP,mBACE,aAAK,SAAS,CAAEV,MAAM,CAACqB,SAAvB,wBACE,YAAK,SAAS,CAAErB,MAAM,CAACsB,KAAvB,CAA8B,GAAG,CAAEhB,WAAnC,CAAgD,GAAG,CAAC,eAApD,EADF,cAEE,KAAC,KAAD,EAAO,IAAI,CAAEG,IAAb,EAFF,cAGE,KAAC,aAAD,EAAe,mBAAmB,CAAG,KAAKG,mBAA1C,EAHF,cAIE,KAAC,KAAD,EAAO,SAAS,CAAGF,SAAnB,EAJF,GADF,CAQE,C,iBAvCcX,KAAK,CAACwB,S,EA0CxB,cAAehB,CAAAA,GAAf","sourcesContent":["import React from 'react';\nimport styles from './App.module.css';\nimport { Cards, Chart,CountryPicker } from './components';\nimport { fetchdata } from './api';\nimport { fetchDailyData } from './api';\nimport coronaImage from './img/logo.png';\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    dailyData: {},\n    country: '',\n  }\n\n  async componentDidMount() {\n    const fetchedData= await fetchdata(\"\");\n    const fetchedGlobalDailyData= await fetchDailyData(\"\");\n    if(fetchedGlobalDailyData)\n      this.setState({ dailyData: fetchedGlobalDailyData });\n    this.setState({ data: fetchedData });\n  }\n  \n  handleCountryChange = async (country) => {\n    if(country===\"global\")\n      window.location.reload(false);\n      \n    const fetchedData= await fetchdata(country);\n    var fetchedDailyData= await fetchDailyData(country);\n    if(country)\n      fetchedDailyData=fetchedDailyData.timeline;\n    else\n    fetchedDailyData={};\n\n    this.setState({ data: fetchedData, country: country, dailyData: fetchedDailyData });\n  }\n\nrender() {\n  const { data, country, dailyData } = this.state;\n  return (\n    <div className={styles.container}>\n      <img className={styles.image} src={coronaImage} alt=\"covid-19 logo\" />\n      <Cards data={data} />\n      <CountryPicker handleCountryChange ={this.handleCountryChange}/>\n      <Chart dailyData= {dailyData} />\n    </div>\n  );\n   }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}