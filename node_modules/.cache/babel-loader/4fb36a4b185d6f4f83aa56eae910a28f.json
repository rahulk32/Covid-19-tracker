{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\covid-19-tracker\\\\src\\\\components\\\\Chart\\\\Chart.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line } from 'react-chartjs-2';\nimport styles from './Chart.module.css';\nimport CountryPicker from '../CountryPicker/CountryPicker';\n\nfunction Chart() {\n  _s();\n\n  //const dailyurl= \"https://corona.lmao.ninja/v2/historical/India?lastdays=70\";\n  const [dailyData, setDailyData] = useState();\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  }, []); // country,province, timeline;\n\n  var data;\n\n  if (dailyData) {\n    var {\n      country,\n      province,\n      timeline\n    } = dailyData;\n    var {\n      cases,\n      deaths,\n      recovered\n    } = timeline;\n    var a = Object.keys(cases),\n        b = Object.values(cases),\n        c = Object.values(recovered);\n    var d = Object.values(deaths);\n    console.log(typeof a);\n    data = {\n      labels: a,\n      datasets: [{\n        label: \"Infected\",\n        data: b,\n        fill: true,\n        backgroundColor: \"rgba(75,192,192,0.2)\",\n        borderColor: \"rgba(75,192,192,1)\"\n      }, {\n        label: \"\",\n        data: c,\n        fill: false,\n        borderColor: \"#742774\"\n      }]\n    };\n  }\n\n  console.log(data); //console.log(dailyData);\n\n  console.log(timeline); //console.log(cases.date);\n\n  /*const lineChart = {\r\n      if(dailyData)\r\n      {\r\n          <Line \r\n          //const a=Object.keys(cases), b=Object.values(cases), c=Object.values(recovered);\r\n          //const d=Object.values(deaths);\r\n          //console.log(a);\r\n           data={{\r\n              labels: a,\r\n              datasets: [{\r\n                  data: b,\r\n                  label: 'Infected',\r\n                  borderColor: '#3333ff',\r\n                  fill: true,\r\n              }, {\r\n                  data: c,\r\n                  label: 'recovered',\r\n                  borderColor: '#3333ff',\r\n                  fill: true,\r\n              }, {\r\n                  data: d,\r\n                  label: 'deaths',\r\n                  borderColor: '#red',\r\n                  backgroundColor: '#blue',\r\n                  fill: true,\r\n              }],\r\n          }}\r\n      />} \r\n      \r\n      \r\n  }*/\n\n  if (data) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);else return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Chart, \"Df7uINklA7E0y88LS1DaV7Pf47Q=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["D:/covid-19-tracker/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","styles","CountryPicker","Chart","dailyData","setDailyData","fetchAPI","data","country","province","timeline","cases","deaths","recovered","a","Object","keys","b","values","c","d","console","log","labels","datasets","label","fill","backgroundColor","borderColor","container"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;AAEA,SAASC,KAAT,GAAkB;AAAA;;AACd;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,EAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMQ,QAAQ,GAAG,YAAY;AACzBD,MAAAA,YAAY,CAAC,MAAMN,cAAc,EAArB,CAAZ;AACH,KAFD;;AAGAO,IAAAA,QAAQ;AACX,GALQ,EAKP,EALO,CAAT,CAJc,CAUd;;AACA,MAAIC,IAAJ;;AACA,MAAGH,SAAH,EACA;AACI,QAAI;AAACI,MAAAA,OAAD;AAAUC,MAAAA,QAAV;AAAoBC,MAAAA;AAApB,QAAgCN,SAApC;AACA,QAAI;AAACO,MAAAA,KAAD;AAAQC,MAAAA,MAAR;AAAgBC,MAAAA;AAAhB,QAA6BH,QAAjC;AACA,QAAII,CAAC,GAACC,MAAM,CAACC,IAAP,CAAYL,KAAZ,CAAN;AAAA,QAA0BM,CAAC,GAACF,MAAM,CAACG,MAAP,CAAcP,KAAd,CAA5B;AAAA,QAAkDQ,CAAC,GAACJ,MAAM,CAACG,MAAP,CAAcL,SAAd,CAApD;AACA,QAAIO,CAAC,GAACL,MAAM,CAACG,MAAP,CAAcN,MAAd,CAAN;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAOR,CAAnB;AACAP,IAAAA,IAAI,GAAG;AACHgB,MAAAA,MAAM,EAAET,CADL;AAEHU,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,KAAK,EAAE,UADT;AAEElB,QAAAA,IAAI,EAAEU,CAFR;AAGES,QAAAA,IAAI,EAAE,IAHR;AAIEC,QAAAA,eAAe,EAAE,sBAJnB;AAKEC,QAAAA,WAAW,EAAE;AALf,OADQ,EAQR;AACEH,QAAAA,KAAK,EAAE,EADT;AAEElB,QAAAA,IAAI,EAAEY,CAFR;AAGEO,QAAAA,IAAI,EAAE,KAHR;AAIEE,QAAAA,WAAW,EAAE;AAJf,OARQ;AAFP,KAAP;AAkBH;;AAEDP,EAAAA,OAAO,CAACC,GAAR,CAAYf,IAAZ,EAvCc,CAwCV;;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAZ,EAzCU,CA2CV;;AAEJ;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACI,MAAGH,IAAH,EACA,oBACI;AAAK,IAAA,SAAS,EAAEN,MAAM,CAAC4B,SAAvB;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEtB;AAAZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ,CADA,KAOI,oBACI;AAAK,IAAA,SAAS,EAAEN,MAAM,CAAC4B;AAAvB;AAAA;AAAA;AAAA;AAAA,UADJ;AAMP;;GAzFQ1B,K;;KAAAA,K;AA2FT,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line } from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\nimport CountryPicker from '../CountryPicker/CountryPicker';\r\n\r\nfunction Chart () {\r\n    //const dailyurl= \"https://corona.lmao.ninja/v2/historical/India?lastdays=70\";\r\n    const [dailyData, setDailyData] = useState();\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        fetchAPI();\r\n    },[]);\r\n    // country,province, timeline;\r\n    var data;\r\n    if(dailyData)\r\n    {\r\n        var {country, province, timeline} = dailyData;\r\n        var {cases, deaths, recovered} = timeline;\r\n        var a=Object.keys(cases), b=Object.values(cases), c=Object.values(recovered);\r\n        var d=Object.values(deaths)\r\n        console.log(typeof(a));\r\n        data = {\r\n            labels: a,\r\n            datasets: [\r\n              {\r\n                label: \"Infected\",\r\n                data: b,\r\n                fill: true,\r\n                backgroundColor: \"rgba(75,192,192,0.2)\",\r\n                borderColor: \"rgba(75,192,192,1)\"\r\n              },\r\n              {\r\n                label: \"\",\r\n                data: c,\r\n                fill: false,\r\n                borderColor: \"#742774\"\r\n              }\r\n            ]\r\n          };\r\n    }\r\n\r\n    console.log(data);\r\n        //console.log(dailyData);\r\n        console.log(timeline);\r\n\r\n        //console.log(cases.date);\r\n    \r\n    /*const lineChart = {\r\n        if(dailyData)\r\n        {\r\n            <Line \r\n            //const a=Object.keys(cases), b=Object.values(cases), c=Object.values(recovered);\r\n            //const d=Object.values(deaths);\r\n            //console.log(a);\r\n             data={{\r\n                labels: a,\r\n                datasets: [{\r\n                    data: b,\r\n                    label: 'Infected',\r\n                    borderColor: '#3333ff',\r\n                    fill: true,\r\n                }, {\r\n                    data: c,\r\n                    label: 'recovered',\r\n                    borderColor: '#3333ff',\r\n                    fill: true,\r\n                }, {\r\n                    data: d,\r\n                    label: 'deaths',\r\n                    borderColor: '#red',\r\n                    backgroundColor: '#blue',\r\n                    fill: true,\r\n                }],\r\n            }}\r\n        />} \r\n        \r\n        \r\n}*/\r\n    if(data)\r\n    return (\r\n        <div className={styles.container}>\r\n            <Line data={data}/>\r\n        </div>\r\n    )\r\n    else\r\n        return (\r\n            <div className={styles.container}>\r\n                \r\n            </div>\r\n        )\r\n\r\n}\r\n\r\nexport default Chart;\r\n"]},"metadata":{},"sourceType":"module"}