{"ast":null,"code":"import _regeneratorRuntime from\"D:/covid-19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/covid-19-tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';var url1=\"https://corona.lmao.ninja/v2/\";var url2=\"?yesterday=true\";var dailyurl1=\"https://corona.lmao.ninja/v2/historical/\";var dailyurl2=\"?lastdays=200\";var url,dailyurl;export var fetchdata=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(country){var _yield$axios$get,_yield$axios$get$data,cases,recovered,deaths,updated;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(country){url=\"\".concat(url1,\"countries/\").concat(country).concat(url2);}else{url=\"\".concat(url1,\"all\").concat(url2);}_context.prev=1;_context.next=4;return axios.get(url);case 4:_yield$axios$get=_context.sent;_yield$axios$get$data=_yield$axios$get.data;cases=_yield$axios$get$data.cases;recovered=_yield$axios$get$data.recovered;deaths=_yield$axios$get$data.deaths;updated=_yield$axios$get$data.updated;return _context.abrupt(\"return\",{cases:cases,recovered:recovered,deaths:deaths,updated:updated});case 13:_context.prev=13;_context.t0=_context[\"catch\"](1);console.log(_context.t0);case 16:case\"end\":return _context.stop();}}},_callee,null,[[1,13]]);}));return function fetchdata(_x){return _ref.apply(this,arguments);};}();export var fetchDailyData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(country){var _yield$axios$get2,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;if(country!==\"\"){dailyurl=\"\".concat(dailyurl1).concat(country).concat(dailyurl2);}else{dailyurl=\"\".concat(dailyurl1,\"all\").concat(dailyurl2);}_context2.next=4;return axios.get(dailyurl);case 4:_yield$axios$get2=_context2.sent;data=_yield$axios$get2.data;return _context2.abrupt(\"return\",data);case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0);case 12:case\"end\":return _context2.stop();}}},_callee2,null,[[0,9]]);}));return function fetchDailyData(_x2){return _ref2.apply(this,arguments);};}();export var fetchCountries=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var _yield$axios$get3,data,countries;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return axios.get('https://corona.lmao.ninja/v2/countries?yesterday=true&strict=true&query');case 3:_yield$axios$get3=_context3.sent;data=_yield$axios$get3.data;countries=data.map(function(curr){return curr.country;});return _context3.abrupt(\"return\",countries);case 9:_context3.prev=9;_context3.t0=_context3[\"catch\"](0);console.log(_context3.t0);case 12:case\"end\":return _context3.stop();}}},_callee3,null,[[0,9]]);}));return function fetchCountries(){return _ref3.apply(this,arguments);};}();","map":{"version":3,"sources":["D:/covid-19-tracker/src/api/index.js"],"names":["axios","url1","url2","dailyurl1","dailyurl2","url","dailyurl","fetchdata","country","get","data","cases","recovered","deaths","updated","console","log","fetchDailyData","fetchCountries","countries","map","curr"],"mappings":"iRAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,IAAI,CAAE,+BAAZ,CACA,GAAMC,CAAAA,IAAI,CAAE,iBAAZ,CACA,GAAMC,CAAAA,SAAS,CAAE,0CAAjB,CACA,GAAMC,CAAAA,SAAS,CAAC,eAAhB,CACA,GAAIC,CAAAA,GAAJ,CAASC,QAAT,CACA,MAAO,IAAMC,CAAAA,SAAS,0FAAG,iBAAOC,OAAP,4LAErB,GAAGA,OAAH,CACA,CACIH,GAAG,WAAIJ,IAAJ,sBAAqBO,OAArB,SAA+BN,IAA/B,CAAH,CACH,CAHD,IAKA,CACIG,GAAG,WAAIJ,IAAJ,eAAcC,IAAd,CAAH,CACH,CAToB,sCAY0CF,CAAAA,KAAK,CAACS,GAAN,CAAUJ,GAAV,CAZ1C,8EAYVK,IAZU,CAYFC,KAZE,uBAYFA,KAZE,CAYKC,SAZL,uBAYKA,SAZL,CAYgBC,MAZhB,uBAYgBA,MAZhB,CAYwBC,OAZxB,uBAYwBA,OAZxB,iCAcV,CAAEH,KAAK,CAALA,KAAF,CAASC,SAAS,CAATA,SAAT,CAAoBC,MAAM,CAANA,MAApB,CAA4BC,OAAO,CAAPA,OAA5B,CAdU,4DAgBjBC,OAAO,CAACC,GAAR,cAhBiB,qEAAH,kBAATT,CAAAA,SAAS,4CAAf,CAoBP,MAAO,IAAMU,CAAAA,cAAc,2FAAG,kBAAOT,OAAP,kKAEtB,GAAGA,OAAO,GAAG,EAAb,CACA,CACIF,QAAQ,WAAKH,SAAL,SAAiBK,OAAjB,SAA2BJ,SAA3B,CAAR,CACH,CAHD,IAKA,CACIE,QAAQ,WAAKH,SAAL,eAAoBC,SAApB,CAAR,CACH,CATqB,uBAUCJ,CAAAA,KAAK,CAACS,GAAN,CAAUH,QAAV,CAVD,yCAUdI,IAVc,mBAUdA,IAVc,kCAWfA,IAXe,6DAatBK,OAAO,CAACC,GAAR,eAbsB,sEAAH,kBAAdC,CAAAA,cAAc,8CAApB,CAgBP,MAAO,IAAMC,CAAAA,cAAc,2FAAG,qNAEClB,CAAAA,KAAK,CAACS,GAAN,CAAU,yEAAV,CAFD,yCAEdC,IAFc,mBAEdA,IAFc,CAIhBS,SAJgB,CAIJT,IAAI,CAACU,GAAL,CAAU,SAACC,IAAD,CAAU,CAClC,MAAOA,CAAAA,IAAI,CAACb,OAAZ,CACH,CAFiB,CAJI,kCAQfW,SARe,6DAUtBJ,OAAO,CAACC,GAAR,eAVsB,sEAAH,kBAAdE,CAAAA,cAAc,2CAApB","sourcesContent":["import axios from 'axios';\r\n\r\nconst url1= \"https://corona.lmao.ninja/v2/\";\r\nconst url2= \"?yesterday=true\";\r\nconst dailyurl1= \"https://corona.lmao.ninja/v2/historical/\";\r\nconst dailyurl2=\"?lastdays=200\";\r\nvar url, dailyurl;\r\nexport const fetchdata = async (country) => {\r\n    \r\n    if(country)\r\n    {\r\n        url=`${url1}countries/${country}${url2}`;\r\n    }\r\n    else\r\n    {\r\n        url=`${url1}all${url2}`;\r\n    }\r\n\r\n    try {\r\n        const {data: { cases, recovered, deaths, updated}} = await axios.get(url);\r\n\r\n        return { cases, recovered, deaths, updated };\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async (country) => {\r\n    try {\r\n        if(country!==\"\")\r\n        {\r\n            dailyurl= `${dailyurl1}${country}${dailyurl2}`;\r\n        }\r\n        else\r\n        {\r\n            dailyurl= `${dailyurl1}all${dailyurl2}`;\r\n        }\r\n        const { data } = await axios.get(dailyurl);\r\n        return data;\r\n    }catch(error) {\r\n        console.log(error);\r\n    }\r\n}\r\nexport const fetchCountries = async () => {\r\n    try{\r\n        const { data } = await axios.get('https://corona.lmao.ninja/v2/countries?yesterday=true&strict=true&query')\r\n\r\n        const countries = data.map( (curr) => {\r\n            return curr.country;\r\n        } );\r\n\r\n        return countries;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}